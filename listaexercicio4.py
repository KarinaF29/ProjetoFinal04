# -*- coding: utf-8 -*-
"""ListaExercicio4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fqEiJkHEDYQ09rmgIUMnMQKZb8hSdsH8

# üìä Projeto Final ‚Äì An√°lise Cont√°bil com Ajuste Econ√¥mico

Este projeto tem como objetivo integrar an√°lise de dados cont√°beis de empresas com indicadores econ√¥micos, utilizando Python, Pandas, Ipeadata e Streamlit.

1) Configure o t√≠tulo na barra do navegador, da p√°gina do projeto no Streamlit e descri√ß√£o inicial do projeto (peso: 1,0)

- T√≠tulo na barra (`page_title`): Lista de Exerc√≠cios 4
- T√≠tulo da p√°gina (`header`): Projeto Final ‚Äì An√°lise Cont√°bil com Ajuste Econ√¥mico
- Descri√ß√£o projeto (`write`): Este projeto tem como objetivo integrar an√°lise de dados cont√°beis de empresas com indicadores econ√¥micos, utilizando Python, Pandas, Ipeadata e Streamlit.
"""

import streamlit as st
import pandas as pd


st.set_page_config(
    page_title="Lista de Exerc√≠cios 4",
    layout="wide",
)

st.title("Projeto Final ‚Äì An√°lise Cont√°bil com Ajuste Econ√¥mico")
st.write("""Este projeto tem como objetivo integrar an√°lise de dados cont√°beis de empresas com indicadores econ√¥micos, utilizando Python, Pandas, Ipeadata e Streamlit.""")

"""2) Importe os dados do arquivo empresas_dados.csv utilizando pandas e apresente todas as linhas da df (peso: 1,0)

Dica: Utilize `head(len(df))`
"""

import pandas as pd

arquivo = "empresas_dados.csv"
df = pd.read_csv("empresas_dados.csv", sep=';')
st.dataframe(df.head(len(df)))

"""3) Calcule os indicadores Margem L√≠quida e ROA e salve como novas coluna da df. Depois apresente os dois indicadores no mesmo gr√°fico de linhas, agrupado por Ano  (peso: 1,0)

- Margem L√≠quida = Lucro L√≠quido / Receita L√≠quida * 100
- ROA = Lucro L√≠quido / Ativo Total *  100
"""

import matplotlib.pyplot as plt


df['Margem_Liquida'] = (df['Lucro L√≠quido'] / df['Receita L√≠quida']) * 100
df['ROA'] = (df['Lucro L√≠quido'] / df['Ativo Total']) * 100


df_agrupado = df.groupby('Ano')[['Margem_Liquida', 'ROA']].mean().reset_index()


plt.figure(figsize=(10, 6))
plt.plot(df_agrupado['Ano'], df_agrupado['Margem_Liquida'], marker="o", label='Margem L√≠quida')
plt.plot(df_agrupado['Ano'], df_agrupado['ROA'], marker="o", label='ROA')

plt.title('Margem L√≠quida e ROA ao Longo dos Anos')
plt.xlabel('Ano')
plt.ylabel('Valor')
plt.legend()
plt.grid(True)
plt.show()



"""4) Utilize o pacote ipeadatapy e fa√ßa busca para encontrar o indicador que traga o IPCA, taxa de varia√ß√£o, em % e anual: (peso: 2,0)

- Baixe os dados no per√≠odo de 2010 a 2024
- Altere o nome da coluna "YEAR" para "Ano"
- Altere o nome da coluna "VALUE ((% a.a.))" para "IPCA"
- Apresente a df para checar se tudo deu certo
"""



import ipeadatapy as ip

ip.list_series('IPCA')

ip.describe('PRECOS_IPCAG')

#Baixe os dados no per√≠odo de 2010 a 2024

ipca_df = ip.timeseries('PRECOS_IPCAG', yearGreaterThan=2009, yearSmallerThan=2025)
ipca_df

ipca_df.rename(columns={'YEAR': 'Ano', 'VALUE ((% a.a.))': 'IPCA'}, inplace = True)
ipca_df

"""5) Combine as duas df (Excel e IPEA) em uma nova df e calcule nova coluna chamada Receita Real (peso: 2,0)

- Utilize a fun√ß√£o `pd.merge()` para unificar as duas df utiilizando a coluna Ano como conex√£o (chave prim√°ria) entre elas
- Crie nova coluna chamada Receita Real que ser√° o resultado da Receita L√≠quida de cada ano deduzido o IPCA do ano: `Receita Real = Receitta L√≠quida - ( Receita L√≠quida * (IPCA/100) )`
- Apresente a nova df combinada

"""

df_combinado = pd.merge(df, ipca_df, on='Ano')
df_combinado['Receita_Real'] = df_combinado['Receita L√≠quida'] - (df_combinado['Receita L√≠quida'] * (df_combinado['IPCA'] / 100))

display(df_combinado.head())

"""6) Crie gr√°fico de linha que apresente as vari√°veis Receita L√≠quida e Receita Real ao longo dos anos (no mesmo gr√°fico) (peso: 1,0)"""

import matplotlib.pyplot as plt

df_combinado.groupby('Receita L√≠quida')['Receita_Real'].sum()




df.plot(x='Ano', y=['Receita L√≠quida', 'Receita_Real'], kind='line')
plt.title('Receita L√≠quida e Receita Real ao Longo dos Anos')
plt.xlabel('Ano')
plt.ylabel('Valor')
plt.show()

"""7) Fa√ßa os ajustes necess√°rios e leve este projeto para a web usando GitHub e Streamlit (peso: 2,0)

- Ca√ßa os ajustes necess√°rios no projeto para ser publicado no Streamlit
- Crie novo reposit√≥rio p√∫blico no GitHub e leve os arquivos .py e .csv pra l√°. Aproveite e crie o arquivo requirements.txt com os pacotes utilizados no projeto
- Crie novo projeto no Streamlit e associe ao reposit√≥rio da lista
"""
